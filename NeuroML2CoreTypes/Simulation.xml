<Lems xmlns="http://www.neuroml.org/lems/0.7.5"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.5 ../../LEMS/Schemas/LEMS/LEMS_v0.7.5.xsd"
      description="Specification of the LEMS Simulation element which is normally used to define simulations of NeuroML2 files. Note: not actually part of NeuroML v2, but this is required by much of the NeuroML toolchain for defining Simulations (which NeuroML model to use and how long to run for), as well as what to _Display_ and what to save in _OutputFile_s.">

    <!-- A number of Simulation types for use in NeuroML 2 documents  -->

    <!-- Including standard unit definitions for NeuroML v2.0 -->

    <Include file="NeuroMLCoreDimensions.xml"/>

    <ComponentType name="Simulation" description="The main element in a LEMS Simulation file. Defines the _length of simulation, the timestep (dt) _step and an optional _seed to use for stochastic elements, as well as _displays, _outputs and _events to record. Specifies a _target component to run, usually the id of a _network_">
        <Parameter name="length" dimension="time" description="Duration of the simulation run"/>
        <Parameter name="step" dimension="time" description="Time step (dt) to use in the simulation"/>

        <Children name="displays" type="Display"/>
        <Children name="outputs" type="OutputFile"/>
        <Children name="events" type="EventOutputFile"/>

        <ComponentReference name="target" type="Component" description="The target component to run, usually the id of a network"/>

        <Text name="seed" description="The seed to use in the random number generator for stochastic entities"/>

        <Dynamics>
            <StateVariable name="t" dimension="time"/>
        </Dynamics>

        <Simulation>
            <Run component="target" variable="t" increment="step" total="length"/>
        </Simulation>
    </ComponentType>


    <ComponentType name="Display" description="Details of a display to generate (usually a set of traces given by _Line_s in a newly opened window) on completion of the simulation.">
        <Parameter name="xmin" dimension="none" description="The minimum value on the x axis (i.e time variable) of the display"/>
        <Parameter name="xmax" dimension="none" description="The maximum value on the x axis (i.e time variable) of the display"/>
        <Parameter name="ymin" dimension="none" description="The minimum value on the y axis of the display"/>
        <Parameter name="ymax" dimension="none" description="The maximum value on the x axis of the display"/>
        <Parameter name="timeScale" dimension="time" description="A scaling of the time axis, e.g. 1ms means display in milliseconds"/>

        <Children name="lines" type="Line"/>

        <Text name="title" description="The title of the display, e.g. to use for the window"/>

        <Simulation>
            <DataDisplay title="title" dataRegion="xmin,xmax,ymin,ymax"/>
        </Simulation>
    </ComponentType>


    <ComponentType name="Line" description="Specification of a single time varying _quantity to plot on the _Display_">
        <Parameter name="scale" dimension="*" description="xxx"/>
        <Parameter name="timeScale" dimension="*" description="xxx"/>
        <Path name="quantity" description="Path to the quantity to save, see see https://docs.neuroml.org/Userdocs/Paths.html"/>
        <Text name="color" description="A hex string for the color to display the trace for this quantity, e.g. #aa33ff"/>
        <Simulation>
            <Record quantity="quantity" timeScale="timeScale" scale="scale" color="color"/>
        </Simulation>
    </ComponentType>


    <ComponentType name="OutputFile" description="A file in which to save recorded values from the simulation">

    	<Children name="outputColumn" type="OutputColumn"/>

          <Text name="path" description="Optional path to the directory in which to store the file"/>
          <Text name="fileName" description="Name of the file to generate. Can include a relative path (from the LEMS Simulation file location)."/>

    	<Simulation>
    		<DataWriter path="path" fileName="fileName"/>
    	</Simulation>

    </ComponentType>

    <ComponentType name="OutputColumn" description="Specification of a single time varying _quantity to record during the simulation.">
        <Path name="quantity" description="Path to the quantity to save, see see https://docs.neuroml.org/Userdocs/Paths.html"/>
        <Simulation>
            <Record quantity="quantity"/>
        </Simulation>
    </ComponentType>


    <ComponentType name="EventOutputFile" description="A file in which to save event information (e.g. spikes from cells in a population) in a specified _format">

        <Children name="eventSelection" type="EventSelection"/>

        <Text name="path" description="Optional path to the directory in which to store the file"/>
        <Text name="fileName" description="Name of the file to generate. Can include a relative path (from the LEMS Simulation file location)."/>
        <Text name="format" description="Takes values TIME_ID or ID_TIME, depending on the preferred order of the time or event id (from _EventSelection_) in each row of the file"/>

        <Simulation>
            <EventWriter path="path" fileName="fileName" format="format"/>
        </Simulation>

    </ComponentType>

    <ComponentType name="EventSelection" description="A specific source of events with an associated _id, which will be recorded inside the file specified in the parent _EventOutputFile_. The attribute _select should point to a cell inside a _population_ (e.g. hhpop[0], see https://docs.neuroml.org/Userdocs/Paths.html), and the _eventPort specifies the port for the emitted events, which usually has id: spike. Note: the _id used on this element (and appearing in the file alongside the event time) can be different from the id/index of the cell in the population.">
        <Path name="select" description="The cell which will be emitting the events"/>
        <Text name="eventPort" description="The port on the cell which generates the events, usually: spike"/>
        <Simulation>
            <EventRecord quantity="select" eventPort="eventPort"/>
        </Simulation>
    </ComponentType>

</Lems>
