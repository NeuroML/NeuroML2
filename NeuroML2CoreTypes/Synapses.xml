<Lems xmlns="http://www.neuroml.org/lems/0.7.4"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.4 ../../LEMS/Schemas/LEMS/LEMS_v0.7.4.xsd"
      description="A number of synaptic ComponentTypes for use in NeuroML 2 documents. These generally extend the _baseSynapse_ ComponentType.">


    <!-- These definitions reference entries in the Computational Neuroscience Ontology. To translate
    the cnoTerms into URLs, follow example of synapse, e.g. cno_0000009 ->
    http://bioportal.bioontology.org/ontologies/46856/?p=terms&conceptid=cno%3Acno_0000009
    alternatively download the OWL file from https://github.com/INCF and open in Protege: http://protege.stanford.edu

    'cnoTerm' MAY be added as a new attribute, but that would add neuroscience specific terms to LEMS. May be better to add
    'reference' or 'ontRef' as a new attribute -->

    <!-- Including standard unit comp types & units for NeuroML v2.0 -->
    <Include file="NeuroMLCoreCompTypes.xml"/>
    <Include file="Inputs.xml"/>


    <ComponentType name="baseSynapse"
                   extends="basePointCurrent"
                   description="Base type for all synapses, i.e. ComponentTypes which produce a current (dimension current) and change Dynamics in response to an incoming event. cno_0000009"> <!-- http://bioportal.bioontology.org/ontologies/46856/?p=terms&conceptid=cno%3Acno_0000009 -->
                   
        <!-- Todo: see why Property isn't inherited by extended types
        <Property name="weight" dimension="none" defaultValue="1"/>-->
        <EventPort name="in" direction="in"/>

    </ComponentType>


    <ComponentType name="baseVoltageDepSynapse"
                   extends="baseSynapse"
                   description="Base type for synapses with a dependence on membrane potential"> <!-- http://bioportal.bioontology.org/ontologies/46856/?p=terms&conceptid=cno%3Acno_0000009 -->

        <Requirement name="v" dimension="voltage" description="The current may vary with the voltage exposed by the ComponentType on which this is placed"/>

    </ComponentType>


    <ComponentType name="baseSynapseDL"
                   extends="baseVoltageDepPointCurrentDL"
                   description="Base type for all synapses, i.e. ComponentTypes which produce a dimensionless current and change Dynamics in response to an incoming event. cno_0000009"> <!-- http://bioportal.bioontology.org/ontologies/46856/?p=terms&conceptid=cno%3Acno_0000009 -->

    </ComponentType>


    <ComponentType name="baseCurrentBasedSynapse"
                   extends="baseSynapse"
                   description="Synapse model which produces a synaptic current.">

    </ComponentType>


    <ComponentType name="alphaCurrentSynapse"
                   extends="baseCurrentBasedSynapse"
                   description="Alpha current synapse: rise time and decay time are both _tau.">

        <Property name="weight" dimension="none" defaultValue="1"/>
        <Parameter name="tau" dimension="time" description="Time course for rise and decay"/>
        <Parameter name="ibase" dimension="current" description="Baseline current increase after receiving a spike"/>

        <Dynamics>
            
            <StateVariable name="I" dimension="current"/>
            <StateVariable name="J" dimension="current"/>
            
            <DerivedVariable name="i" exposure="i" dimension="current" value="I" />

            <TimeDerivative variable="I" value="(2.7182818284590451*J - I)/tau" />
            <TimeDerivative variable="J" value="-J/tau" />

            <OnStart>
                <StateAssignment variable="I" value="0" />
                <StateAssignment variable="J" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="J" value="J + weight * ibase" />
            </OnEvent>
            
        </Dynamics>
    </ComponentType>



    <ComponentType name="baseConductanceBasedSynapse"
                   extends="baseVoltageDepSynapse"
                   description="Synapse model which exposes a conductance _g in addition to producing a current. Not necessarily ohmic!! cno_0000027">

        <Parameter name="gbase" dimension="conductance" description="Baseline conductance, generally the maximum conductance following a single spike"/>
        <Parameter name="erev" dimension="voltage" description="Reversal potential of the synapse"/>

        <Exposure name="g" dimension="conductance" description="Time varying conductance through the synapse"/>

    </ComponentType>


   <ComponentType name="baseConductanceBasedSynapseTwo"
                   extends="baseVoltageDepSynapse"
                   description="Synapse model suited for a sum of two expTwoSynapses which exposes a conductance _g in addition to producing a current. Not necessarily ohmic!! cno_0000027">

        <Parameter name="gbase1" dimension="conductance" description="Baseline conductance 1"/>
        <Parameter name="gbase2" dimension="conductance" description="Baseline conductance 2"/>
        <Parameter name="erev" dimension="voltage" description="Reversal potential of the synapse"/>

        <Exposure name="g" dimension="conductance" description="Time varying conductance through the synapse"/>

    </ComponentType>



    <ComponentType name="expOneSynapse"
                   extends="baseConductanceBasedSynapse"
                   description="Ohmic synapse model whose conductance rises instantaneously by (_gbase * _weight) on receiving an event, and which decays exponentially to zero with time course _tauDecay">

        <Property name="weight" dimension="none" defaultValue="1"/>

        <Parameter name="tauDecay" dimension="time" description="Time course of decay"/>

        <Dynamics>

            <StateVariable name="g" dimension="conductance" exposure="g"/>

            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />

            <TimeDerivative variable="g" value="-g / tauDecay" />

            <OnStart>
                <StateAssignment variable="g" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="g" value="g + (weight * gbase)" />
            </OnEvent>

        </Dynamics>
    </ComponentType>


    <ComponentType name="alphaSynapse"
                   extends="baseConductanceBasedSynapse"
                   description="Ohmic synapse model where rise time and decay time are both _tau. Max conductance reached during this time (assuming zero conductance before) is _gbase * _weight.">

        <Property name="weight" dimension="none" defaultValue="1"/> 

        <Parameter name="tau" dimension="time" description="Time course of rise/decay"/>

        <Dynamics>

            <StateVariable name="g" dimension="conductance" exposure="g"/>
            <StateVariable name="A" dimension="conductance"/>

            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />

            <TimeDerivative variable="g" value="(2.7182818284590451 * A - g)/tau" />
            <TimeDerivative variable="A" value="-A / tau" />

            <OnStart>
                <StateAssignment variable="g" value="0" />
                <StateAssignment variable="A" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="A" value="A + (gbase*weight)" />
            </OnEvent>

        </Dynamics>
    </ComponentType>



    <ComponentType name="expTwoSynapse"
                   extends="baseConductanceBasedSynapse"
                   description="Ohmic synapse model whose conductance waveform on receiving an event has a rise time of _tauRise and a decay time of _tauDecay. Max conductance reached during this time (assuming zero conductance before) is _gbase * _weight.">
        
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Parameter name="tauRise" dimension="time" />
        <Parameter name="tauDecay" dimension="time" />
        
        <DerivedParameter name="peakTime" dimension="time" value="log(tauDecay / tauRise) * (tauRise * tauDecay)/(tauDecay - tauRise)"/>
        <DerivedParameter name="waveformFactor" dimension="none" value="1 / (-exp(-peakTime / tauRise) + exp(-peakTime / tauDecay))"/>

        <Dynamics>
            <StateVariable name="A" dimension="none"/>
            <StateVariable name="B" dimension="none"/>

            <!-- TODO: catch tauRise = 0..! -->

            <DerivedVariable name="g" dimension="conductance" exposure="g" value="gbase * (B - A)" />
            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />

            <TimeDerivative variable="A" value="-A / tauRise" />
            <TimeDerivative variable="B" value="-B / tauDecay" />

            <OnStart>
                <StateAssignment variable="A" value="0" />
                <StateAssignment variable="B" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="A" value="A + (weight * waveformFactor)" />
                <StateAssignment variable="B" value="B + (weight * waveformFactor)" />
            </OnEvent>

        </Dynamics>
    </ComponentType>



   <ComponentType name="expThreeSynapse"
                   extends="baseConductanceBasedSynapseTwo"
                   description="Ohmic synapse similar to expTwoSynapse but consisting of two components that can differ in decay times and max conductances but share the same rise time.">
        
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Parameter name="tauRise" dimension="time" />
        <Parameter name="tauDecay1" dimension="time" />
        <Parameter name="tauDecay2" dimension="time" />
        
        <DerivedParameter name="peakTime1" dimension="time" value="log(tauDecay1 / tauRise) * (tauRise * tauDecay1)/(tauDecay1 - tauRise)"/>
        <DerivedParameter name="waveformFactor1" dimension="none" value="1 / (-exp(-peakTime1 / tauRise) + exp(-peakTime1 / tauDecay1))"/>

        <DerivedParameter name="peakTime2" dimension="time" value="log(tauDecay2 / tauRise) * (tauRise * tauDecay2)/(tauDecay2 - tauRise)"/>
        <DerivedParameter name="waveformFactor2" dimension="none" value="1 / (-exp(-peakTime2 / tauRise) + exp(-peakTime2 / tauDecay2))"/>

        <Dynamics>
            <StateVariable name="A" dimension="none"/>
            <StateVariable name="B" dimension="none"/>
            <StateVariable name="C" dimension="none"/>


            <DerivedVariable name="g" dimension="conductance" exposure="g" value="gbase1*(B - A) + gbase2*(C-A)" />
            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />

            <TimeDerivative variable="A" value="-A / tauRise" />
            <TimeDerivative variable="B" value="-B / tauDecay1" />
            <TimeDerivative variable="C" value="-C / tauDecay2" />

            <OnStart>
                <StateAssignment variable="A" value="0" />
                <StateAssignment variable="B" value="0" />
                <StateAssignment variable="C" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="A" value="A + (gbase1*weight * waveformFactor1 + gbase2*weight*waveformFactor2 )/(gbase1+gbase2)" />

                <StateAssignment variable="B" value="B + (weight * waveformFactor1)" />
                <StateAssignment variable="C" value="C + (weight * waveformFactor2)" />
              
            </OnEvent>

        </Dynamics>
    </ComponentType>


    <ComponentType name="baseBlockMechanism"
                   description="Base of any ComponentType which produces a varying scaling (or blockage) of synaptic strength of magnitude _scaling">

        <Exposure name="blockFactor" dimension="none"/>

    </ComponentType>


    <ComponentType name="voltageConcDepBlockMechanism"
                   extends="baseBlockMechanism"
                   description="Synaptic blocking mechanism which varys with membrane potential across the synapse, e.g. in NMDA receptor mediated synapses">

        <Parameter name="blockConcentration" dimension="concentration" />
        <Parameter name="scalingConc" dimension="concentration" />
        <Parameter name="scalingVolt" dimension="voltage" />

        <Requirement name="v" dimension="voltage"/>

        <Text name="species"/>

        <Dynamics>
            <DerivedVariable name="blockFactor" dimension="none" exposure="blockFactor" value="1/(1 + (blockConcentration / scalingConc)* exp(-1 * (v / scalingVolt)))" />
        </Dynamics>

    </ComponentType>


    <ComponentType name="basePlasticityMechanism"
                   description="Base plasticity mechanism.">
        <EventPort name="in" direction="in" description="This is where the plasticity mechanism receives spike events from the parent synapse."/>
        <Exposure name="plasticityFactor" dimension="none"/>
    </ComponentType>


    <ComponentType name="tsodyksMarkramDepMechanism"
                   extends="basePlasticityMechanism"
                   description="Depression-only Tsodyks-Markram model, as in Tsodyks and Markram 1997.">
        <Parameter name="initReleaseProb" dimension="none" />
        <Parameter name="tauRec" dimension="time" />

        <Dynamics>
            <StateVariable name="R" dimension="none"/>

            <DerivedVariable name="U" dimension="none" value="initReleaseProb"/>
            <DerivedVariable name="plasticityFactor" dimension="none" exposure="plasticityFactor" value="R * U" />

            <TimeDerivative variable="R" value="(1 - R) / tauRec"/>

            <OnStart>
                <StateAssignment variable="R" value="1" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="R" value="R * (1 - U)" />
            </OnEvent>
        </Dynamics>

        <Structure>
            <With instance="parent" as="a"/>
            <With instance="this" as="b"/>
            <EventConnection from="a" to="b"/>
        </Structure>

    </ComponentType>


    <ComponentType name="tsodyksMarkramDepFacMechanism"
                   extends="basePlasticityMechanism"
                   description="Full Tsodyks-Markram STP model with both depression and facilitation, as in Tsodyks, Pawelzik and Markram 1998.">
        <Parameter name="initReleaseProb" dimension="none" />
        <Parameter name="tauRec" dimension="time" />
        <Parameter name="tauFac" dimension="time" />

        <Dynamics>
            <StateVariable name="R" dimension="none"/>
            <StateVariable name="U" dimension="none"/>

            <DerivedVariable name="plasticityFactor" dimension="none" exposure="plasticityFactor" value="R * U" />

            <TimeDerivative variable="R" value="(1 - R) / tauRec"/>
            <TimeDerivative variable="U" value="(initReleaseProb - U) / tauFac"/>

            <OnStart>
                <StateAssignment variable="R" value="1" />
                <StateAssignment variable="U" value="initReleaseProb" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="R" value="R * (1 - U)" />
                <StateAssignment variable="U" value="U + initReleaseProb * (1 - U)" />
            </OnEvent>
        </Dynamics>

        <Structure>
            <With instance="parent" as="a"/>
            <With instance="this" as="b"/>
            <EventConnection from="a" to="b"/>
        </Structure>

    </ComponentType>
    


    <ComponentType name="blockingPlasticSynapse"
                   extends="expTwoSynapse"
                   description="Biexponential synapse that allows for
				optional block and plasticity
				mechanisms, which can be expressed as
				child elements.">
       
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Children name="plasticityMechanisms" type="basePlasticityMechanism"/>
        <Children name="blockMechanisms" type="baseBlockMechanism"/>
        
        <EventPort name="relay" direction="out" description="Used to relay incoming spikes to child plasticity mechanism"/>
        <Dynamics>
            <StateVariable name="A" dimension="none"/>
            <StateVariable name="B" dimension="none"/>

            <DerivedVariable name="plasticityFactor" dimension="none"
                             select="plasticityMechanisms[*]/plasticityFactor"
                             reduce="multiply"/>
            
            <DerivedVariable name="blockFactor" dimension="none"
                             select="blockMechanisms[*]/blockFactor"
                             reduce="multiply"/>
            
            <DerivedVariable name="g" dimension="conductance" exposure="g"
                             value="blockFactor * gbase * (B - A)" />
            <DerivedVariable name="i" exposure="i" dimension="current"
                             value="g * (erev - v)" />

            <TimeDerivative variable="A" value="-A / tauRise" />
            <TimeDerivative variable="B" value="-B / tauDecay" />

            <OnStart>
                <StateAssignment variable="A" value="0" />
                <StateAssignment variable="B" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="A" value="A + (weight * plasticityFactor * waveformFactor)" />
                <StateAssignment variable="B" value="B + (weight * plasticityFactor * waveformFactor)" />
                <EventOut port="relay"/>
            </OnEvent>
        </Dynamics>
    </ComponentType>
    

    <ComponentType name="doubleSynapse"
                   extends="baseVoltageDepSynapse"
                   description="Synapse consisting of two independent synaptic mechanisms (e.g. AMPA-R and NMDA-R), which can be easily colocated in connections">
       
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <ComponentReference name="synapse1" type="baseSynapse"/>
        <ComponentReference name="synapse2" type="baseSynapse"/>
        
        <EventPort name="relay" direction="out" description="Used to relay incoming spikes to child mechanisms"/>
        
        <Path name="synapse1Path"/>
        <Path name="synapse2Path"/>
        
        <Dynamics>
            <StateVariable name="weightFactor" dimension="none"/>

            <DerivedVariable name="i1" dimension="current" select="synapse1/i"/>
            <DerivedVariable name="i2" dimension="current" select="synapse2/i"/>
            <DerivedVariable name="i" exposure="i" dimension="current" value="weightFactor * (i1 + i2)"/>

            <OnEvent port="in">
                <StateAssignment variable="weightFactor" value="weight" />
                <EventOut port="relay"/>
            </OnEvent>
            
        </Dynamics>
        
        <Structure>
            <ChildInstance component="synapse1"/>
            <ChildInstance component="synapse2"/>
            
            <With instance="this" as="a"/>
            <With instance="synapse1Path" as="b"/>
            <With instance="synapse2Path" as="c"/>
            
            <EventConnection from="a" to="c"/>
            <EventConnection from="a" to="b"/>
        </Structure>
        
    </ComponentType>



    <ComponentType name="stdpSynapse"
                   extends="expTwoSynapse"
                   description="Spike timing dependent plasticity mechanism,  NOTE: EXAMPLE NOT YET WORKING!!!! cno_0000034">

        <Constant name="tsinceRate" dimension="none" value="1"/>
        <Constant name="longTime" dimension="time" value="1000s"/>

        <Exposure name="tsince" dimension="time"/>

        <Exposure name="M" dimension="none"/>
        <Exposure name="P" dimension="none"/>

        <Dynamics>
            <StateVariable name="A" dimension="none"/>
            <StateVariable name="B" dimension="none"/>

            <StateVariable name="M" dimension="none" exposure="M"/>
            <StateVariable name="P" dimension="none" exposure="P"/>

            <StateVariable name="tsince" dimension="time" exposure="tsince"/>

            <DerivedVariable name="g" dimension="conductance" exposure="g" value="gbase * (B - A)" />

            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />


            <TimeDerivative variable="A" value="-A / tauRise" />
            <TimeDerivative variable="B" value="-B / tauDecay" />

            <TimeDerivative variable="tsince" value="tsinceRate" />

            <OnStart>
                <StateAssignment variable="A" value="0" />
                <StateAssignment variable="B" value="0" />

                <StateAssignment variable="M" value="1" />
                <StateAssignment variable="P" value="1" />

                <StateAssignment variable="tsince" value="longTime" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="A" value="A + waveformFactor" />
                <StateAssignment variable="B" value="B + waveformFactor" />
                <StateAssignment variable="tsince" value="0" />
            </OnEvent>

        </Dynamics>

    </ComponentType>
    
    
    <ComponentType name="gapJunction"
                   extends="baseSynapse"
                   description="Gap junction/single electrical connection">
        
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Parameter name="conductance" dimension="conductance"/>
        
        <Exposure name="i" dimension="current"/>
        
        <Requirement name="v" dimension="voltage"/>

        <InstanceRequirement name="peer" type="gapJunction"/>

        <Dynamics>
            <DerivedVariable name="vpeer" dimension="voltage" select="peer/v"/>
            <DerivedVariable name="i" exposure="i"  value="weight * conductance * (vpeer - v)"/>
        </Dynamics>
        
    </ComponentType>
    

    
    <ComponentType name="baseGradedSynapse"
                   extends="baseSynapse"
                   description="Base type for graded synapses">
    </ComponentType>
    

    <ComponentType name="silentSynapse"
                   extends="baseGradedSynapse"
                   description="Dummy synapse which emits no current. Used as presynaptic endpoint for analog synaptic connection.">
        
        <Property name="weight" dimension="none" defaultValue="1"/> <!-- Not used...-->
    
        <Exposure name="i" dimension="current"/>
        
        <Requirement name="v" dimension="voltage"/>

        <InstanceRequirement name="peer" type="baseGradedSynapse"/>

        <Dynamics>
            <DerivedVariable name="vpeer" dimension="voltage" select="peer/v"/>
            <DerivedVariable name="i" exposure="i"  value="0"/>
        </Dynamics>
        
    </ComponentType>
    
    
    <ComponentType name="linearGradedSynapse"
                   extends="baseGradedSynapse"
                   description="Behaves just like a one way gap junction.">
        
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Parameter name="conductance" dimension="conductance"/>
        
        <Exposure name="i" dimension="current"/>
        
        <Requirement name="v" dimension="voltage"/>

        <InstanceRequirement name="peer" type="baseGradedSynapse"/>

        <Dynamics>
            <DerivedVariable name="vpeer" dimension="voltage" select="peer/v"/>
            <DerivedVariable name="i" exposure="i"  value="weight * conductance * (vpeer - v)"/>
        </Dynamics>
    </ComponentType>
    
    
    <ComponentType name="gradedSynapse"
                   extends="baseGradedSynapse"
                   description="Graded/analog synapse. Based on synapse in Methods of http://www.nature.com/neuro/journal/v7/n12/abs/nn1352.html">
        
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Parameter name="conductance" dimension="conductance"/>
        
        <Parameter name="delta" dimension="voltage" description="Slope of the activation curve"/>
        <Parameter name="k" dimension="per_time" description="Rate constant for transmitter-receptor dissociation rate"/>
        <Parameter name="Vth" dimension="voltage" description="The half-activation voltage of the synapse"/>
        <Parameter name="erev" dimension="voltage" description="The reversal potential of the synapse"/>
        
        <Exposure name="i" dimension="current"/>
        <Exposure name="inf" dimension="none"/>
        <Exposure name="tau" dimension="time"/>
        
        <Requirement name="v" dimension="voltage"/>

        <InstanceRequirement name="peer" type="baseGradedSynapse"/>

        <Dynamics>
            <StateVariable name="s" dimension="none"/>
            
            <DerivedVariable name="vpeer" dimension="voltage" select="peer/v"/>
            
            <DerivedVariable name="inf" dimension="none" value="1/(1 + exp((Vth - vpeer)/delta))" exposure="inf"/>
            <DerivedVariable name="tau" dimension="time" value="(1-inf)/k" exposure="tau"/>
            
            <DerivedVariable name="i" exposure="i"  value="weight * conductance * s * (erev-v)"/>
            
            <!-- To catch case where tau ~ 0 => too fast a change in s => numerical instability -->
            <ConditionalDerivedVariable name="s_rate" dimension="per_time">
                <Case condition="(1-inf) .gt. 1e-4" value="(inf - s)/tau"/>
                <Case value="0"/>
            </ConditionalDerivedVariable>
            
            <TimeDerivative variable="s" value="s_rate" />
            
            <!-- To catch case where tau ~ 0 => too fast a change in s => numerical instability -->
            <OnCondition test="(1-inf) .lt. 1e-4">
                <StateAssignment variable="s" value="inf"/>
            </OnCondition>
            
        </Dynamics>
    </ComponentType>

</Lems>
