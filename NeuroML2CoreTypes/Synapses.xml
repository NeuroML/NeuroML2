<Lems xmlns="http://www.neuroml.org/lems/0.7.1"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.1 ../../LEMS/Schemas/LEMS/LEMS_v0.7.1.xsd"
      description="A number of synaptic ComponentTypes for use in NeuroML 2 documents. These generally extend the _baseSynapse_ ComponentType.">


    <!-- These definitions reference entries in the Computational Neuroscience Ontology. To translate
    the cnoTerms into URLs, follow example of synapse, e.g. cno_0000009 ->
    http://bioportal.bioontology.org/ontologies/46856/?p=terms&conceptid=cno%3Acno_0000009
    alternatively download the OWL file from https://github.com/INCF and open in Protege: http://protege.stanford.edu

    'cnoTerm' MAY be added as a new attribute, but that would add neuroscience specific terms to LEMS. May be better to add
    'reference' or 'ontRef' as a new attribute -->

    <!-- Including standard unit comp types & units for NeuroML v2.0 -->
    <Include file="NeuroMLCoreCompTypes.xml"/>
    <Include file="Inputs.xml"/>


    <ComponentType name="baseSynapse"
        extends="baseVoltageDepPointCurrent"
        description="Base type for all synapses, i.e. ComponentTypes which produce a current (dimension current) and change Dynamics in response to an incoming event. cno_0000009"> <!-- http://bioportal.bioontology.org/ontologies/46856/?p=terms&conceptid=cno%3Acno_0000009 -->
        <Child name="notes" type="notes"/>

        <EventPort name="in" direction="in"/>


    </ComponentType>

    <ComponentType name="baseSynapseDL"
        extends="baseVoltageDepPointCurrentDL"
        description="Base type for all synapses, i.e. ComponentTypes which produce a dimensionless current and change Dynamics in response to an incoming event. cno_0000009"> <!-- http://bioportal.bioontology.org/ontologies/46856/?p=terms&conceptid=cno%3Acno_0000009 -->

        <EventPort name="in" direction="in"/>


    </ComponentType>


    <ComponentType name="baseConductanceBasedSynapse"
        extends="baseSynapse"
        description="Synapse model which exposes a conductance _g in addition to producing a current. Not necessarily ohmic!! cno_0000027">

        <Parameter name="gbase" dimension="conductance" description="Baseline conductance, generally the maximum conductance following a single spike"/>
        <Parameter name="erev" dimension="voltage" description="Reversal potential of the synapse"/>

        <Exposure name="g" dimension="conductance" description="Time varying conductance through the synapse"/>

        <Dynamics>
            <DerivedVariable name="i" exposure="i" dimension="current" value="0" />
            <DerivedVariable name="g" exposure="g" dimension="conductance" value="0" />
        </Dynamics>

    </ComponentType>


    <ComponentType name="expOneSynapse"
       extends="baseConductanceBasedSynapse"
       description="Ohmic synapse model whose conductance rises instantaneously by _gbase on receiving an event, and which decays exponentially to zero with time course _tauDecay">

        <Parameter name="tauDecay" dimension="time" description="Time course of decay"/>

        <Dynamics>

            <StateVariable name="g" dimension="conductance" exposure="g"/>

            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />

            <TimeDerivative variable="g" value="-g / tauDecay" />

            <OnStart>
                <StateAssignment variable="g" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="g" value="g + gbase" />
            </OnEvent>

        </Dynamics>
    </ComponentType>


    <ComponentType name="expTwoSynapse"
       extends="baseConductanceBasedSynapse"
       description="Ohmic synapse model whose conductance waveform on receiving an event has a rise time of _tauRise and a decay time of _tauDecay. Max conductance reached during this time (assuming zero conductance before) is _gbase.">

        <Parameter name="tauRise" dimension="time" />
        <Parameter name="tauDecay" dimension="time" />
	<DerivedParameter name="peakTime" dimension="time" value="ln(tauDecay / tauRise) * (tauRise * tauDecay)/(tauDecay - tauRise)"/>
	<DerivedParameter name="waveformFactor" dimension="none" value="1 / (-exp(-peakTime / tauRise) + exp(-peakTime / tauDecay))"/>

        <Dynamics>
            <StateVariable name="A" dimension="none"/>
            <StateVariable name="B" dimension="none"/>

	    <!-- TODO: catch tauRise = 0..! -->

            <DerivedVariable name="g" dimension="conductance" exposure="g" value="gbase * (B - A)" />
            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />

            <TimeDerivative variable="A" value="-A / tauRise" />
            <TimeDerivative variable="B" value="-B / tauDecay" />

            <OnStart>
                <StateAssignment variable="A" value="0" />
                <StateAssignment variable="B" value="0" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="A" value="A + waveformFactor" />
                <StateAssignment variable="B" value="B + waveformFactor" />
            </OnEvent>

        </Dynamics>
    </ComponentType>


    <ComponentType name="baseBlockMechanism"
        description="Base of any ComponentType which produces a varying scaling (or blockage) of synaptic strength of magnitude _scaling">

        <Exposure name="blockFactor" dimension="none"/>

    </ComponentType>


    <ComponentType name="voltageConcDepBlockMechanism"
       extends="baseBlockMechanism"
       description="Synaptic blocking mechanism which varys with membrane potential across the synapse, e.g. in NMDA receptor mediated synapses">

        <Parameter name="blockConcentration" dimension="concentration" />
        <Parameter name="scalingConc" dimension="concentration" />
        <Parameter name="scalingVolt" dimension="voltage" />

        <Requirement name="v" dimension="voltage"/>

        <Text name="species"/>

        <Dynamics>
            <DerivedVariable name="blockFactor" dimension="none" exposure="blockFactor" value="1/(1 + (blockConcentration / scalingConc)* exp(-1 * (v / scalingVolt)))" />
        </Dynamics>

    </ComponentType>


    <ComponentType name="basePlasticityMechanism"
		   description="Base plasticity mechanism.">
      <EventPort name="in" direction="in" description="This is where the plasticity mechanism receives spike events from the parent synapse."/>
      <Exposure name="plasticityFactor" dimension="none"/>
    </ComponentType>


    <ComponentType name="tsodyksMarkramDepMechanism"
		   extends="basePlasticityMechanism"
		   description="Depression-only Tsodyks-Markram model, as in Tsodyks and Markram 1997.">
      <Parameter name="initReleaseProb" dimension="none" />
      <Parameter name="tauRec" dimension="time" />

      <Dynamics>
	<StateVariable name="R" dimension="none"/>

	<DerivedVariable name="U" dimension="none" value="initReleaseProb"/>
	<DerivedVariable name="plasticityFactor" dimension="none" exposure="plasticityFactor" value="R * U" />

	<TimeDerivative variable="R" value="(1 - R) / tauRec"/>

	<OnStart>
	  <StateAssignment variable="R" value="1" />
	</OnStart>

	<OnEvent port="in">
	  <StateAssignment variable="R" value="R * (1 - U)" />
	</OnEvent>
      </Dynamics>

      <Structure>
	<With instance="parent" as="a"/>
	<With instance="this" as="b"/>
	<EventConnection from="a" to="b"/>
      </Structure>

    </ComponentType>


    <ComponentType name="tsodyksMarkramDepFacMechanism"
		   extends="basePlasticityMechanism"
		   description="Full Tsodyks-Markram STP model with both depression and facilitation, as in Tsodyks, Pawelzik and Markram 1998.">
      <Parameter name="initReleaseProb" dimension="none" />
      <Parameter name="tauRec" dimension="time" />
      <Parameter name="tauFac" dimension="time" />

      <Dynamics>
	<StateVariable name="R" dimension="none"/>
	<StateVariable name="U" dimension="none"/>

	<DerivedVariable name="plasticityFactor" dimension="none" exposure="plasticityFactor" value="R * U" />

	<TimeDerivative variable="R" value="(1 - R) / tauRec"/>
	<TimeDerivative variable="U" value="(initReleaseProb - U) / tauFac"/>

	<OnStart>
	  <StateAssignment variable="R" value="1" />
	  <StateAssignment variable="U" value="initReleaseProb" />
	</OnStart>

	<OnEvent port="in">
	  <StateAssignment variable="R" value="R * (1 - U)" />
	  <StateAssignment variable="U" value="U + initReleaseProb * (1 - U)" />
	</OnEvent>
      </Dynamics>

      <Structure>
	<With instance="parent" as="a"/>
	<With instance="this" as="b"/>
	<EventConnection from="a" to="b"/>
      </Structure>

    </ComponentType>

    <ComponentType name="blockingPlasticSynapse"
		   extends="expTwoSynapse"
		   description="Biexponential synapse that allows for
				optional block and plasticity
				mechanisms, which can be expressed as
				child elements.">
      <Child name="plasticityMechanism" type="basePlasticityMechanism"/>
      <Child name="blockMechanism" type="baseBlockMechanism"/>
      <EventPort name="relay" direction="out" description="Used to relay incoming spikes to child plasticity mechanism"/>
      <Dynamics>
	<StateVariable name="A" dimension="none"/>
	<StateVariable name="B" dimension="none"/>

	<DerivedVariable name="plasticityFactor" dimension="none"
			 select="plasticityMechanism/plasticityFactor"
			 reduce="multiply" required="false"/>
	<DerivedVariable name="blockFactor" dimension="none"
			 select="blockMechanism/blockFactor"
			 reduce="multiply" required="false"/>
	<DerivedVariable name="g" dimension="conductance" exposure="g"
			 value="blockFactor * gbase * (B - A)" />
	<DerivedVariable name="i" exposure="i" dimension="current"
			 value="g * (erev - v)" />

	<TimeDerivative variable="A" value="-A / tauRise" />
	<TimeDerivative variable="B" value="-B / tauDecay" />

	<OnStart>
	  <StateAssignment variable="A" value="0" />
	  <StateAssignment variable="B" value="0" />
	</OnStart>

	<OnEvent port="in">
	  <StateAssignment variable="A" value="A + plasticityFactor * waveformFactor" />
	  <StateAssignment variable="B" value="B + plasticityFactor * waveformFactor" />
	  <EventOut port="relay"/>
	</OnEvent>
      </Dynamics>
    </ComponentType>

  <!--- -->

    <ComponentType name="stdpSynapse"
       extends="expTwoSynapse"
       description="Spike timing dependent plasticity mechanism,  NOTE: EXAMPLE NOT YET WORKING!!!! cno_0000034">

        <Constant name="tsinceRate" dimension="none" value="1"/>
        <Constant name="longTime" dimension="time" value="1000s"/>

        <Exposure name="tsince" dimension="time"/>

        <Exposure name="M" dimension="none"/>
        <Exposure name="P" dimension="none"/>

        <Dynamics>
            <StateVariable name="A" dimension="none"/>
            <StateVariable name="B" dimension="none"/>

            <StateVariable name="M" dimension="none" exposure="M"/>
            <StateVariable name="P" dimension="none" exposure="P"/>

            <StateVariable name="tsince" dimension="time" exposure="tsince"/>

            <DerivedVariable name="g" dimension="conductance" exposure="g" value="gbase * (B - A)" />

            <DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />


            <TimeDerivative variable="A" value="-A / tauRise" />
            <TimeDerivative variable="B" value="-B / tauDecay" />

            <TimeDerivative variable="tsince" value="tsinceRate" />

            <OnStart>
                <StateAssignment variable="A" value="0" />
                <StateAssignment variable="B" value="0" />

                <StateAssignment variable="M" value="1" />
                <StateAssignment variable="P" value="1" />

                <StateAssignment variable="tsince" value="longTime" />
            </OnStart>

            <OnEvent port="in">
                <StateAssignment variable="A" value="A + waveformFactor" />
                <StateAssignment variable="B" value="B + waveformFactor" />
                <StateAssignment variable="tsince" value="0" />
            </OnEvent>


        </Dynamics>

    </ComponentType>

</Lems>
